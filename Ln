.global _start
_start:
//
	adr r11, _frac_div
	ldr r0, _data
	mov r3, #0x7f

// (x - 1) / (x + 1)
	lsls r0, #9
	add r3, r3, r0, lsr #31
	push {r3-r7}

	asr r0, #1
	lsr r1, r0, #8
	mvnmi r0, r0, asr #1
	addmi r0, #1
	orr r1, #0x01000000

	clz r4, r0
	lsl r0, r4
	addpl r4, #1
	orrmi r4, #0x80000000

	cmp r0, r1, lsl #7
	lsrpl r0, #1
	addmi r4, #1
	eor r3, r3
_ln_div:
//	udiv r2, r0, r1
	ldr r2, [r11], #4
	
	orr r3, r2, r3, lsl #7
	mul r2, r2, r1
	sub r0, r2
	rsbs r2, r1, r0, lsl #1
	lslmi r2, r0, #1
	lsl r0, r2, #7
	adcs r3, r3
	bpl _ln_div

// argument & argument^2
_argument:
	push {r3-r4}
	umulls r1, r0, r3, r3
	lsr r1, #31
	lsl r4, #1
	orr r4, r4, r0, lsr #31
	orrpl r0, r1, r0, lsl #1	

	mov r7, #2
	adr r6, _ln_cons
	ldr r1, [r6, #12]
	uxtb r5, r1
	eor r1, r5
	sub r3, r4, r5
	lsr r2, r0, r3
	add r1, r2
	
	umull r2, r1, r1, r0
	add r3, r4, r5
	sub r3, r1, lsr #31
	
_data:
	.word 0x00400000
	
_frac_div:
	.word 0x49
	.word 0x24
	.word 0x12
	.word 0x49

_ln_cons:
	.word 0xfeb8aa3b
	.word 0x01f638ab
	.word 0x01938ea9
	.word 0xe0cecb02

	.word 0x00b17218
