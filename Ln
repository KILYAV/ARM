.global _start
_start:
//
	adr r11, _frac_div
	ldr r0, _data
	mov r3, #0x7f

// (x - 1) / (x + 1)
	lsls r0, #9
	add r3, r3, r0, lsr #31
	push {r3-r6}

	asr r0, #1
	lsr r1, r0, #8
	orr r1, #0x01000000
	mvnmi r0, r0
	addmi r0, #1

	clz r4, r0
	lsl r0, r4
	orrmi r4, #0x80000000

	cmp r0, r1, lsl #7
	lsrpl r0, #1
	addmi r4, #1
	eor r3, r3
_ln_div:
//	udiv r2, r0, r1
	ldr r2, [r11], #4
	
	orr r3, r2, r3, lsl #7
	mul r2, r2, r1
	sub r0, r2
	rsbs r2, r1, r0, lsl #1
	lslmi r2, r0, #1
	lsl r0, r2, #7
	adcs r3, r3
	bpl _ln_div

// argument & argument^2
	push {r3-r4}
	umulls r1, r0, r3, r3
	clz r2, r0
	lsl r0, r2
	add r4, r2, r4, lsl #1
	orrpl r0, r1, lsr #31

	adr r6, _ln_cons
	ldr r1, [r6], #4
	add r5, r4, #1
_ln_mul:
	umulls r2, r1, r1, r0
	clz r3, r1
	lsl r1, r3
	add r5, r3
	orrpl r1, r1, r2, lsr #31
	ldr r2, [r6], #4
	sxtb 



	add r5, r4
	sub r5, r1, lsr #31
	lslpl r1, #1
	orrpl r1, r2, lsr #31
	ldr r2, [r6], #4
	sub r3, r5, r2, asr #28
	asrs r5, r2, #28
	lsl r2, #8
	lsr r1, r3
	add r1, r2
	bpl _ln_mul
	
_data:
	.word 0x00400000
	
_frac_div:
	.word 0x49
	.word 0x24
	.word 0x12
	.word 0x49

_ln_cons:
	.word 0xe0cecb00
	.word 0x938ea901
	.word 0xf638ab00
	.word 0xb8aa3b00

	.word 0x00b17218
